name: Dependency Management

on:
  push:
    paths:
      - 'requirements*.txt'
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/dependencies.yml'
  pull_request:
    paths:
      - 'requirements*.txt'
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'package.json'
      - 'package-lock.json'
  schedule:
    - cron: '0 0 * * 1'  # Weekly on Monday
  workflow_dispatch:

jobs:
  check-dependencies:
    name: Check Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: 'pip'

      - name: Create basic requirements if missing
        run: |
          if [ ! -f "requirements.txt" ]; then
            echo "# Basic requirements" > requirements.txt
            echo "requests==2.31.0" >> requirements.txt
            echo "pydantic==2.5.2" >> requirements.txt
          fi

      - name: Install pip-tools
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools safety || pip install pip-tools

      - name: Validate requirements files
        if: success() || failure()
        run: |
          if [ -f "requirements.txt" ]; then
            echo "Checking requirements.txt format..."
            pip check requirements.txt || echo "Requirements check failed but continuing..."
          else
            echo "No requirements.txt found, skipping check"
          fi
        continue-on-error: true

      - name: Check for known vulnerabilities
        if: success() || failure()
        run: |
          if command -v safety &> /dev/null && [ -f "requirements.txt" ]; then
            safety check -r requirements.txt --full-report || echo "Safety check failed but continuing..."
          else
            echo "Safety check skipped - tool or requirements not available"
          fi
        continue-on-error: true

      - name: Generate dependency report
        if: always()
        run: |
          echo "## Dependency Report" > dependency-report.md
          echo "### Python Dependencies" >> dependency-report.md
          if [ -f "requirements.txt" ]; then
            echo "Found requirements.txt:" >> dependency-report.md
            echo "\`\`\`" >> dependency-report.md
            cat requirements.txt >> dependency-report.md
            echo "\`\`\`" >> dependency-report.md
          else
            echo "No requirements.txt found." >> dependency-report.md
          fi
          echo "### Status" >> dependency-report.md
          echo "- Requirements Check: ${{ job.steps.validate.outcome || 'SKIPPED' }}" >> dependency-report.md
          echo "- Security Check: ${{ job.steps.safety.outcome || 'SKIPPED' }}" >> dependency-report.md

      - name: Upload dependency report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: dependency-report
          path: dependency-report.md
          retention-days: 5 